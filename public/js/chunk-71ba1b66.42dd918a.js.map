{"version":3,"sources":["webpack:///./src/services/teacherService.js","webpack:///./node_modules/_core-js@3.9.0@core-js/modules/es.array.concat.js","webpack:///./node_modules/_@babel_runtime@7.12.18@@babel/runtime/helpers/esm/typeof.js"],"names":["listAllTeachers","Promise","resolve","reject","console","log","userService","studioInfo","studioId","id","query","getTeachersByStudioId","teachers","teacherData","userAction","studentsAction","i","length","userId","commons","studioLogoPath","push","getUserInfoByUserId","getStudentsByTeacherId","all","usersInfo","studentList","forEach","user","teacher","phone","email","website","active","name","studentCount","students","student","teacherId","undefined","teacherList","getTeacherFutureLessonsCountByTeacherId","lessonsCount","listNextLessonsByTeacher","lessons","getStudentNextLesson","studentId","nextLesson","getInstrumentById","instrumentId","instrument","lessonConfig","lessonScheduleData","tkUtils","isNull","getUserName","userAvatarPath","minPictureUrl","lessonTypeData","formatPrice","price","timeLength","formatRepeatType","repeatType","formatWeekday","shouldDateTime","formatHHMMAP","avatar","icon","lessonTypeName","schedule","originData","addLessonType","content","collections","lessonType","doc","set","then","updateLessonConfig","lessonScheduleConfigure","update","listAllLessonsByTeacher","timestamp","startD","Date","endD","setMonth","getMonth","startTimestamp","parseInt","getFullYear","getTime","endTimestamp","getDaysInMonth","lessonSchedule","where","get","lessonsDoc","empty","exists","data","url","isOverDay","type","listAllEventsByTeacher","events","error","listLessonsAndEventsByTeacherId","result","concat","$","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","FORCED","target","proto","forced","arg","k","len","E","this","A","n","arguments","TypeError","_typeof","obj","Symbol","iterator","constructor","prototype"],"mappings":"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","file":"js/chunk-71ba1b66.42dd918a.js","sourcesContent":["import { logger } from 'firebase-functions'\nimport firebase from 'firebase/app'\nimport commons from '../util/commons'\nimport tkUtils from '../util/tkUtils'\nimport collections from './collections'\nimport userService from './userService'\nimport query from './query'\n\nexport default {\n    listAllTeachers() {\n        return new Promise(async (resolve, reject) => {\n            try {\n                console.log('开始获取所有的教师信息')\n                let studioInfo = await userService.studioInfo()\n                console.log('获取到的studioinfo: ', studioInfo)\n                let studioId = studioInfo.id\n                let teachers = await query.getTeachersByStudioId(studioId)\n                console.log('获取到的教师信息: ', teachers)\n                let teacherData = {}\n                let userAction = []\n                let studentsAction = []\n                for (let i = 0; i < teachers.length; i++) {\n                    let id = teachers[i].userId\n                    teachers[i]['avatar'] = commons.studioLogoPath(teachers[i].studioId)\n                    userAction.push(query.getUserInfoByUserId(id))\n                    studentsAction.push(query.getStudentsByTeacherId(id))\n                    teacherData[id] = teachers[i]\n                }\n                let usersInfo = await Promise.all(userAction)\n                console.log('获取用户详情: ', usersInfo)\n\n                let studentList = await Promise.all(studentsAction)\n                console.log('获取学生详情: ', studentList)\n                usersInfo.forEach(user => {\n                    let userId = user.userId\n                    let teacher = teacherData[userId]\n                    console.log('------', teacher)\n                    teacher.phone = user.phone\n                    teacher.email = user.email\n                    teacher.website = user.website\n                    teacher.active = user.active\n                    teacher.name = user.name\n                    teacher.studentCount = 0\n                    teacher.students = []\n                    teacherData[userId] = teacher\n                })\n\n                studentList.forEach(students => {\n                    students.forEach(student => {\n                        let teacherId = student.teacherId\n                        let teacher = teacherData[teacherId]\n                        let students = teacher.students\n                        if (typeof students === undefined || students === null) {\n                            students = []\n                        }\n                        students.push(student)\n                        teacher.students = students\n                        teacher.studentCount = teacher.students.length\n                        teacherData[teacherId] = teacher\n                    })\n                })\n                console.log('所有的教师信息: ', teacherData)\n                let teacherList = []\n                for (let teacherId in teacherData) {\n                    teacherData[teacherId].lessonsCount = await query.getTeacherFutureLessonsCountByTeacherId(teacherId)\n                    teacherList.push(teacherData[teacherId])\n                }\n                console.log('最后的数据:', teacherList)\n                resolve(teacherList)\n            } catch (error) {\n                reject(error)\n            }\n        })\n    },\n    listNextLessonsByTeacher(teacherId) {\n        return new Promise(async (resolve, reject) => {\n            //获取当前老师的所有学生\n            try {\n                let students = await query.getStudentsByTeacherId(teacherId)\n                console.log(\"该老师的所有学生：\", students)\n                //获取学生最近的一门课程\n                let lessons = []\n                for (let i = 0; i < students.length; i++) {\n                    let nextLesson = await query.getStudentNextLesson(students[i].studentId, students[i].teacherId)\n                    if (nextLesson !== null) {\n                        console.log('next lesosn: ', nextLesson)\n                        let instrument = await query.getInstrumentById(nextLesson.instrumentId)\n                        // let lessonConfig = await query.getLessonConfigById(nextLesson.lessonScheduleConfigId)\n                        let lessonConfig = nextLesson.lessonScheduleData\n                        if (tkUtils.isNull(lessonConfig)) {\n                            // lesson config 为空\n                            continue\n                        }\n                        console.log('instrument', instrument)\n                        lessons.push({\n                            id: nextLesson.id,\n                            name: await query.getUserName(nextLesson.studentId),\n                            avatar: commons.userAvatarPath(nextLesson.studentId),\n                            instrument: instrument.name,\n                            icon: instrument.minPictureUrl,\n                            instrumentId: nextLesson.instrumentId,\n                            lessonTypeName: nextLesson.lessonTypeData.name,\n                            price: commons.formatPrice(nextLesson.lessonTypeData.price),\n                            timeLength: nextLesson.lessonTypeData.timeLength + \"min\",\n                            repeatType: commons.formatRepeatType(lessonConfig.repeatType),\n                            schedule: tkUtils.formatWeekday(nextLesson.shouldDateTime * 1000) + \". \" + tkUtils.formatHHMMAP(nextLesson.shouldDateTime * 1000),\n                            studentId: nextLesson.studentId,\n                            teacherId: nextLesson.teacherId,\n                            originData: nextLesson\n                        })\n                    }\n                }\n                console.log('最后获取的 lesson 数据: ', lessons)\n                resolve(lessons)\n            } catch (error) {\n                reject(error)\n            }\n        })\n    },\n    addLessonType(content) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                await collections.lessonType.doc(content.id).set(content).then(() => {\n                    resolve(true)\n                })\n            } catch (error) {\n                console.log(error)\n                resolve(false)\n            }\n        })\n    },\n    updateLessonConfig(content) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                await collections.lessonScheduleConfigure.doc(content.id).update(content).then(() => {\n                    resolve(true)\n                })\n            } catch (error) {\n                console.log(error)\n                resolve(false)\n            }\n        })\n    },\n    listAllLessonsByTeacher(teacherId, timestamp) {\n        let startD = tkUtils.isNull(timestamp) ? new Date() : new Date(timestamp)\n        let endD = tkUtils.isNull(timestamp) ? new Date() : new Date(timestamp)\n        startD.setMonth(startD.getMonth() - 1)\n        endD.setMonth(endD.getMonth() + 1)\n        let startTimestamp = parseInt(new Date(startD.getFullYear() + \"/\" + (startD.getMonth() + 1) + \"/1\").getTime() / 1000)\n        let endTimestamp = parseInt(new Date(endD.getFullYear() + \"/\" + (endD.getMonth() + 1) + \"/\" + tkUtils.getDaysInMonth(endD.getTime())).getTime() / 1000)\n        console.log(startTimestamp, endTimestamp)\n        return new Promise(async (resolve, reject) => {\n            try {\n                let lessonsDoc = await collections.lessonSchedule.where(\"teacherId\", \"==\", teacherId).where(\"shouldDateTime\", \">=\", startTimestamp).where(\"shouldDateTime\", \"<=\", endTimestamp).get()\n                let lessons = []\n\n                if (!lessonsDoc.empty) {\n                    lessonsDoc.forEach(doc => {\n                        if (doc.exists) {\n                            let data = doc.data()\n                            data.url = commons.userAvatarPath(data.studentId)\n                            data.isOverDay = false\n                            data.type = 1\n                            data.name = data.lessonTypeData.name\n                            data.shouldDateTime = data.shouldDateTime * 1000\n                            lessons.push(data)\n                        }\n                    })\n                }\n\n                resolve(lessons)\n            } catch (error) {\n                reject(error)\n            }\n        })\n    },\n    listAllEventsByTeacher(teacherId, timestamp) {\n        return new Promise(async (resolve, reject) => {\n            try {\n\n                let events = []\n\n                resolve(events)\n            } catch (error) {\n                reject(error)\n            }\n        })\n    },\n    async listLessonsAndEventsByTeacherId(teacherId, timestamp) {\n        let lessons = await this.listAllLessonsByTeacher(teacherId, timestamp)\n        let events = await this.listAllEventsByTeacher(teacherId, timestamp)\n        let result = lessons.concat(events)\n        return result\n    },\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}"],"sourceRoot":""}